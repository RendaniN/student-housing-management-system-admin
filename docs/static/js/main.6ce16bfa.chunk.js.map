{"version":3,"sources":["env.js","components/CreateStudentTap.js","components/ComponentRow.js","components/ComplaintsTap.js","components/MaintenanceRequestRow.js","components/MaintenanceRequestsTap.js","App.js","serviceWorker.js","index.js"],"names":["env","url","CreateStudentTap","createStudnet","_callee","e","name","email","password","password_confirmation","regenerator_default","a","wrap","_context","prev","next","preventDefault","_this","props","state","studentName","studentEmail","studentPassword","setState","creatingStudentAccount","axios","post","concat","qs","stringify","then","response","console","log","data","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","catch","error","stop","this","_this2","react_default","createElement","Container","text","textAlign","Header","Form","onSubmit","Field","placeholder","value","onChange","target","type","Button","loading","primary","Component","ComplaintRow","replay","closeComplaint","complaint_id","complaint","id","fetchStuff","replayToComplaint","Table","Row","key","disabled","status","Cell","title","description","created_at","student","TextArea","rows","autoHeight","style","styles","tableTextArea","size","fluid","inverted","color","onClick","borderRadius","width","ComplaintsTap","complaints","map","ComponentRow","celled","table","HeaderCell","Body","menu","marginTop","padding","menuBody","MaintenanceRequestRow","closeRequest","request_id","request","markRequestAsInProcess","renderStatusButtons","Group","negative","Or","positive","renderCurrentStatus","Label","as","tag","MaintenanceRequests","requests","components_MaintenanceRequestRow","App","navActiveItem","menuActiveItem","handleNaveItemClick","_ref","handleMenuItemClick","_ref2","sent","renderMaintenanceMenu","renderBody","MaintenanceRequestsTap","components_CreateStudentTap","components_ComplaintsTap","_this$state","activeItem","className","Menu","fixed","Item","active","handleItemClick","pointing","lib","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6ce16bfa.chunk.js","sourcesContent":["export const env = {\n  \"url\": \"https://student-housing-backend-wadahesam.c9users.io/api\"\n}","import React, { Component } from 'react';\nimport { Button, Container, Form, Header } from 'semantic-ui-react';\nimport axios from 'axios';\nimport qs from 'querystring';\nimport { env } from '../env';\nimport { toast } from 'react-toastify';\n\n\nclass CreateStudentTap extends Component {\n\n  createStudnet = async (e) => {\n    e.preventDefault();\n    const name = this.props.state.studentName;\n    const email = this.props.state.studentEmail;\n    const password = this.props.state.studentPassword;\n    const password_confirmation = this.props.state.studentPassword;\n    this.props.setState({creatingStudentAccount: true});\n    axios.post(`${env.url}/createStudentAccount`, qs.stringify({name, email, password, password_confirmation}))\n    .then(response => {\n      console.log(response.data);\n      this.props.setState({\n        creatingStudentAccount: false,\n        studentEmail: '',\n        studentName: '',\n        studentPassword: '',\n      });\n      toast.success('New student has been created', {\n        position: \"bottom-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n      });\n    })\n    .catch(error => {\n      this.props.setState({creatingStudentAccount: false});\n      toast.error(`${error}`, {\n        position: \"bottom-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n      });\n    })\n  }\n\n  render() {\n    // const { state, setState } = this.prosp;\n    return (\n      <Container text textAlign=\"left\">\n        <Header>Create Student Account</Header>\n        <Form onSubmit={this.createStudnet}>\n          <Form.Field>\n            <label>Name</label>\n            <input \n            placeholder='Name' \n            value={this.props.state.studentName} \n            onChange={e => {this.props.setState({studentName: e.target.value})}} \n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Email</label>\n            <input \n            placeholder='Email' \n            type=\"email\" \n            value={this.props.state.studentEmail} \n            onChange={e => {this.props.setState({studentEmail: e.target.value})}} \n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Password</label>\n            <input \n            placeholder='Password' \n            type=\"password\" \n            value={this.props.state.studentPassword} \n            onChange={e => {this.props.setState({studentPassword: e.target.value})}} \n            />\n          </Form.Field>\n          <Button loading={this.props.state.creatingStudentAccount} primary type='submit'>Create Student</Button>\n        </Form>\n      </Container>\n    );\n  }\n}\n\nexport default CreateStudentTap;","import React, { Component } from 'react';\nimport { Table, TextArea, Button, Form } from 'semantic-ui-react';\nimport axios from 'axios';\nimport qs from 'querystring';\nimport { env } from '../env';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass ComplaintRow extends Component {\n  state = {\n    replay: null,\n  }\n\n  closeComplaint = () => {\n    axios.post(`${env.url}/closeComplaint`, qs.stringify({ complaint_id: this.props.complaint.id }))\n    .then((response) =>{\n      this.props.fetchStuff();\n      toast.success('Complaint has been closed', {\n        position: \"bottom-right\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n      });\n    });\n  }\n\n  replayToComplaint = () => {\n    axios.post(`${env.url}/replayToComplaint`, qs.stringify({ complaint_id: this.props.complaint.id, replay: this.state.replay }))\n    .then((response) =>{\n      this.props.fetchStuff();\n      toast.success('Reply submitted to the complaint', {\n        position: \"bottom-right\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n      });\n    });\n  }\n\n  render() {\n    const { complaint } = this.props;\n    return(\n      <Table.Row key={complaint.id} disabled={(complaint.status === \"closed\")}>\n        <Table.Cell><h4>{complaint.id}</h4></Table.Cell>\n        <Table.Cell><h3>{complaint.title}</h3></Table.Cell>\n        <Table.Cell>{complaint.description}</Table.Cell>\n        <Table.Cell>{complaint.created_at}</Table.Cell>\n        <Table.Cell>{complaint.student.name}</Table.Cell>\n        <Table.Cell>\n          {\n            (complaint.replay) ? \n            complaint.replay : \n            <div>\n              <Form onSubmit={(data) => {this.replayToComplaint(complaint.id, data)}}>\n                <TextArea rows=\"2\" autoHeight onChange={(e) => {this.setState({replay: e.target.value})}} style={styles.tableTextArea}/>\n                <Button type=\"submit\" size=\"small\" fluid>Replay</Button>\n              </Form>\n\n            </div>\n          }\n        </Table.Cell>\n        <Table.Cell>\n          {\n            (complaint.status === \"open\") ?\n            <Button inverted size=\"large\" color=\"red\" onClick={this.closeComplaint}>Close</Button> :\n            <Button inverted size=\"large\" disabled color=\"red\">Closed</Button>\n          }\n        </Table.Cell>\n      </Table.Row>\n    );\n  }\n}\n\nconst styles = {\n  tableTextArea: {\n    borderRadius: 5, \n    width: '100%',\n  }\n}\n\nexport default ComplaintRow;","import React, { Component } from 'react';\nimport { Table, } from 'semantic-ui-react';\nimport ComplaintRow from './ComponentRow';\n\nclass ComplaintsTap extends Component {\n  render() {\n    const complaints = this.props.state.complaints.map((complaint) => {\n      return (\n        <ComplaintRow complaint={complaint} key={complaint.id} fetchStuff={this.props.fetchStuff} />\n      );\n    })\n    return (\n      <Table celled style={styles.table} textAlign=\"center\">\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>ID</Table.HeaderCell>\n            <Table.HeaderCell>Title</Table.HeaderCell>\n            <Table.HeaderCell>Description</Table.HeaderCell>\n            <Table.HeaderCell>Date</Table.HeaderCell>\n            <Table.HeaderCell>By</Table.HeaderCell>\n            <Table.HeaderCell>Replay</Table.HeaderCell>\n            <Table.HeaderCell>Status</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {complaints}\n        </Table.Body>\n      </Table>\n    );\n  }\n}\n\nconst styles = {\n  menu: {\n    marginTop: 60,\n    padding: 20,\n  },\n  menuBody: {\n    padding: 20,\n    marginTop: -20,\n  },\n  tableTextArea: {\n    borderRadius: 5, \n    width: '100%',\n  }\n}\n\nexport default ComplaintsTap;","import React, {Component} from 'react';\nimport { Table, TextArea, Button, Form, Label } from 'semantic-ui-react';\nimport axios from 'axios';\nimport qs from 'querystring';\nimport { env } from '../env';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { request } from 'https';\n\nclass MaintenanceRequestRow extends Component {\n\n  closeRequest = () => {\n    axios.post(`${env.url}/closeMaintenanceRequest`, qs.stringify({ request_id: this.props.request.id }))\n    .then(() =>{\n      this.props.fetchStuff();\n      toast.success('Request has been closed', {\n        position: \"bottom-right\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n      });\n    });\n  }\n\n  markRequestAsInProcess = () => {\n    axios.post(`${env.url}/setMaintenanceRequestAsInProcess`, qs.stringify({ request_id: this.props.request.id }))\n    .then(() =>{\n      this.props.fetchStuff();\n      toast.success('Request is in process', {\n        position: \"bottom-right\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n      });\n    });\n  }\n\n  renderStatusButtons = () => {\n    const { request } = this.props;\n    if (request.status === 'open') {\n      return (\n        <Button.Group>\n          <Button \n            negative\n            onClick={this.closeRequest}\n          >\n            Close\n          </Button>\n          <Button.Or text='or' />\n          <Button \n            onClick={this.markRequestAsInProcess}\n            positive\n          >\n            In Process\n          </Button>\n        </Button.Group> \n      );\n    } else if (request.status === 'in_process') {\n      return (\n        <Button \n          negative\n          onClick={this.closeRequest}\n        >\n          Close \n        </Button>\n      );\n    } else {\n      return <p>Request is closed.</p>\n    }\n  }\n\n  renderCurrentStatus = () => {\n    const { request } = this.props;\n    if (request.status === 'open') {\n      return (\n        <Label as='a' color='green' tag>\n          Open\n        </Label>\n      );\n    } else if ( request.status === 'closed') {\n      return (\n        <Label as='a' color='red' tag>\n          Closed\n        </Label>\n      );\n    } else {\n      return (\n        <Label as='a' color='blue' tag>\n          In Process\n        </Label>\n      );\n    }\n  }\n\n  render () {\n    const { request } = this.props; \n\n    return (\n      <Table.Row key={request.id} disabled={(request.status === \"closed\")}>\n        <Table.Cell><h4>{request.id}</h4></Table.Cell>\n        <Table.Cell>{request.type}</Table.Cell>\n        <Table.Cell><h3>{request.title}</h3></Table.Cell>\n        <Table.Cell>{request.description}</Table.Cell>\n        <Table.Cell>{request.created_at}</Table.Cell>\n        <Table.Cell>{request.student.name}</Table.Cell>\n        <Table.Cell>\n          {this.renderCurrentStatus()}\n        </Table.Cell>\n        <Table.Cell>\n          {this.renderStatusButtons()}\n        </Table.Cell>\n\n      </Table.Row>\n    );\n  }\n  \n}\n\nexport default MaintenanceRequestRow;","import React, { Component } from 'react';\nimport { Table } from 'semantic-ui-react';\nimport MaintenanceRequestsRow from './MaintenanceRequestRow';\n\nclass MaintenanceRequests extends Component {\n\n  render() {\n    const requests = this.props.state.requests.map((request) => {\n      return (\n        <MaintenanceRequestsRow request={request} key={request.id} fetchStuff={this.props.fetchStuff} />\n      );\n    })\n    return (\n      <Table celled style={styles.table} textAlign=\"center\">\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>ID</Table.HeaderCell>\n            <Table.HeaderCell>Type</Table.HeaderCell>\n            <Table.HeaderCell>Title</Table.HeaderCell>\n            <Table.HeaderCell>Description</Table.HeaderCell>\n            <Table.HeaderCell>Date</Table.HeaderCell>\n            <Table.HeaderCell>By</Table.HeaderCell>\n            <Table.HeaderCell>State</Table.HeaderCell>\n            <Table.HeaderCell>Change State</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {requests}\n        </Table.Body>\n      </Table>\n    );\n  }\n}\n\nconst styles = {\n  menu: {\n    marginTop: 60,\n    padding: 20,\n  },\n  menuBody: {\n    padding: 20,\n    marginTop: -20,\n  },\n  tableTextArea: {\n    borderRadius: 5, \n    width: '100%',\n  }\n}\n\nexport default MaintenanceRequests;","import React, { Component } from 'react';\nimport './App.css';\nimport { Button, Menu } from 'semantic-ui-react';\nimport axios from 'axios';\nimport { env } from './env';\nimport CreateStudentTap from './components/CreateStudentTap';\nimport ComplaintsTap from './components/ComplaintsTap';\nimport MaintenanceRequestsTap from './components/MaintenanceRequestsTap';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass App extends Component {\n  state = { \n    navActiveItem: 'home',\n    menuActiveItem: 'complaints',\n    studentName: '',\n    studentEmail: '',\n    studentPassword: '',\n    creatingStudentAccount: false,\n    complaints: [],\n    requests: [],\n  }\n\n  handleNaveItemClick = (e, { name }) => this.setState({ navActiveItem: name })\n  handleMenuItemClick = (e, { name }) => this.setState({ menuActiveItem: name })\n\n  async componentWillMount() {\n    this.fetchStuff();\n  }\n\n  fetchStuff = async () => {\n    const requests = await axios.post(`${env.url}/getAllMaintenanceRequests`);\n    const complaints = await axios.post(`${env.url}/getAllComplaints`);\n    this.setState({\n      complaints: complaints.data,\n      requests: requests.data,\n    });\n    console.log(this.state);\n  }\n\n  renderMaintenanceMenu = () => {\n    return (\n      <div>Mentainance</div>\n    );\n  }\n\n  renderBody = () => {\n    switch (this.state.menuActiveItem) {\n      case 'maintenance requests':\n        return <MaintenanceRequestsTap state={this.state} setState={(state) => {this.setState(state)}} fetchStuff={this.fetchStuff}/>\n      case 'create student': \n        return <CreateStudentTap state={this.state} setState={(state) => {this.setState(state)}} />\n      default: \n        return <ComplaintsTap state={this.state} setState={(state) => {this.setState(state)}} fetchStuff={this.fetchStuff}/>\n    }\n  }\n\n  render() {\n    const { activeItem, menuActiveItem } = this.state\n\n    return (\n      <div className=\"App\">\n        {/* Nav Section */}\n        <div>\n          <Menu inverted fixed=\"top\" size='large'>\n            <Menu.Item name='home' active={activeItem === 'home'} onClick={this.handleItemClick} />\n            <Menu.Menu position='right'>\n              <Menu.Item>\n                <Button color=\"green\">Admin Panel</Button>\n              </Menu.Item>\n            </Menu.Menu>\n          </Menu>\n        </div>\n\n        {/* Menu Section */}\n        <div style={styles.menu}>\n          <Menu pointing>\n            <Menu.Item \n              name='complaints' \n              active={menuActiveItem === 'complaints'} \n              onClick={this.handleMenuItemClick} \n            />\n            <Menu.Item\n              name='maintenance requests'\n              active={menuActiveItem === 'maintenance requests'}\n              onClick={this.handleMenuItemClick}\n            />\n            <Menu.Item\n              name='create student'\n              active={menuActiveItem === 'create student'}\n              onClick={this.handleMenuItemClick}\n            />\n          </Menu>\n        </div>\n\n        {/* Meru Body Section */}\n        <div style={styles.menuBody}>\n          {this.renderBody()}\n        </div>\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  menu: {\n    marginTop: 60,\n    padding: 20,\n  },\n  menuBody: {\n    padding: 20,\n    marginTop: -20,\n  },\n  tableTextArea: {\n    borderRadius: 5, \n    width: '100%',\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}